---
layout: post
title:  "Mac Setup"
date:   2014-10-03 20:59:15
categories: private
---

This is how I set up my Mac. I took notes since I was a Mac newbie.


----------------------------------------------------------------------------------------------------------------------------------------

Security
----------------------------------------------------------------------------------------------------------------------------------------

### Set up firmware password

* Hold alt key while booting
* Select recovery
* Go to Utilities > Firmware password

### Change root password
sudo passwd

### Remove access to home folder for other users and groups
chmod -R g-r /Users/ali
chmod -R g-w /Users/ali
chmod -R g-x /Users/ali
chmod -R o-r /Users/ali
chmod -R o-w /Users/ali
chmod -R o-x /Users/ali

### `umask` settings
**This is reverted afterwards since it was causing system problems.**

Change umask so that new created folders and files are not accessible by group or others. By default, Mac makes new files readable 
by everyone, even if the parent folder of the file/folder is not like that.
Add line `umask 077` to file `/etc/launchd.conf`.


----------------------------------------------------------------------------------------------------------------------------------------

Finder and UI
----------------------------------------------------------------------------------------------------------------------------------------

### Show hidden files in Finder
Execute command (case sensitive)

`defaults write com.apple.finder AppleShowAllFiles -boolean true`

Then to refresh Finder, execute 

`killall Finder`

### Show full path in Finder

`defaults write com.apple.finder _FXShowPosixPathInTitle -bool YES`

`killall Finder`

### Get rid of Dashboard

`defaults write com.apple.dashboard mcx-disabled -boolean true`

`kilall Dock`


----------------------------------------------------------------------------------------------------------------------------------------

Package management
----------------------------------------------------------------------------------------------------------------------------------------

Install Homebrew package manager. Instructions at: http://brew.sh


Homebrew stuff installed:

{% highlight bash %}
brew install wget
brew install coreutils
brew install dos2unix
brew tap homebrew/science
brew install gfortran
brew install octave
brew install nodejs
brew install htop
{% endhighlight %}

{% highlight bash %}
brew install bash-completion
{% endhighlight %}

This one needs some post installation work:
{% highlight bash %}
#  Add following to ~/.bash_profile
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi
{% endhighlight %}

----------------------------------------------------------------------------------------------------------------------------------------

Setting environment variables
----------------------------------------------------------------------------------------------------------------------------------------
Need to add them in `/etc/launchd.conf`. That will work with GUI and console applications for all users.

For example: 

`setenv JAVE_HOME /path/to/java/home`

You cannot reference other variables unfortunately. Following will not work:

`setenv VAR2 $VAR1:/my/folder`

Need to hardcode all:

`setenv VAR2 /folder/for/var1:/my/folder`

After doing this, check if env var is found:

`grep -E "^setenv" /etc/launchd.conf | xargs -t -L 1 launchctl`

`echo $VAR_NAME`

Unfortunately, Mac 10.8+ doesn't allow overriding $PATH env var in `launchd.conf`, so following will have no effect:

`setenv PATH /usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/my/application/bin`

To add stuff to `PATH`which is used by console, add lines similar to following into `/etc/profile`:

`export PATH=$PATH:/Users/ali/Desktop/devl-tools/apache-maven-2.2.1/bin/`

Notes:

* `environment.plist` does not work for applications launched via Spotlight.
* `/etc/paths` - only works for console
* `/etc/csh.cshrc` or `/etc/bashrc` - only for some shells


----------------------------------------------------------------------------------------------------------------------------------------

Install JDK
----------------------------------------------------------------------------------------------------------------------------------------
Install Java7 as Java6 is very hard to find. Also, the vendor for Java6 is Apple, not Sun/Oracle.

Download from <http://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.html>
You will have a DMG file.
Open the DMG and double click on the package. Install regularly.

It is installed into `/Library/Java/JavaVirtualMachines`
Thus, you need to update your environment variables.

Add following into `/etc/launchd.conf`

`setenv JAVA_HOME /Library/Java/JavaVirtualMachines/jdk1.7.0_67.jdk/Contents/Home`

*[Following statement is necessary if java -version returns a different version]*

Use following to set it on Apple's weird structure:

`sudo ln -nsf /Library/Java/JavaVirtualMachines/jdk1.7.0_67.jdk/Contents /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK`

Restart your machine. All of the following should point to new JDK:

* `which java`
* `java -version`
* `/usr/libexec/java_home`

#### Set up JDK in IntelliJ

* File -> Project structure -> SDKs
* New JDK -> /Library/Java/JavaVirtualMachines/jdk1.7.0_67.jdk/Contents/Home


----------------------------------------------------------------------------------------------------------------------------------------

Install developer tools
----------------------------------------------------------------------------------------------------------------------------------------

### Maven
Add `M2_HOME` environment variable with value `/Users/ali/Desktop/devl-tools/apache-maven-3.2.3`.

Add `mvn` to `PATH` in `/etc/launchd.conf/`:

`setenv PATH "/usr/local/bin:.......:/Users/ali/Desktop/devl-tools/apache-maven-3.2.3/bin"`
                     
Create file `${user.home}/.m2/settings.xml` with [default content](http://maven.apache.org/settings.html).

Add following in that file to relocate the repository:

`<localRepository>/Users/ali/Desktop/devl-tool-data/maven-repo/</localRepository>`

### Gradle
Add `GRADLE_HOME` environment variable with value `/Users/ali/Desktop/devl-tools/gradle-2.1/bin`.


### Mysql
Download tarball and extract to `~/Desktop/devl-tools`

Create a symbolic link : `ln -s mysql-5.5.xxxxxxx mysql`

Copy `<MYSQL-FOLDER>/support-files/my-small.cnf` to `/etc/my.cnf` and change values:

* `user            = ali`
* `basedir         = /Users/ali/Desktop/devl-tools/mysql`
* `datadir         = /Users/ali/Desktop/devl-tool-data/mysql-data`
 
 
Add `mysql/bin` folder to `PATH`.

Set up MySql data folder rights:

{% highlight bash %}
chmod -R 700 /Users/ali/Desktop/devl-tool-data/mysql-data
chmod -R 700 /Users/ali/Desktop/devl-tools/mysql
chmod 700 /Users/ali/Desktop/devl-tools/mysql
cd ~/Desktop/devl-tools/mysql
scripts/mysql_install_db --user=ali
{% endhighlight %}

Start mysql using `/Users/ali/Desktop/devl-tools/mysql/bin/mysqld_safe > /dev/null 2>&1 &`

Shutdown using `mysqladmin -u root shutdown`

Do this to start mysql on login : <http://www.greybeard.org/?page_id=59>:

* modify the file, so there is only `--user=ali` argument
* modify working dir etc.
* `launchctl load ~/Library/LaunchAgents/com.mysql.mysqld.plist`

### Intellij IDEA
To use `-Xmx2048m` option you should copy the original `.vmoptions` file from `/Applications/IntelliJ IDEA.app/bin/idea.vmoptions` 
to `~/Library/Preferences/IntelliJIdeaXX/idea.vmoptions`, then modify the `-Xmx` setting.

OLD approach : Change `IntelliJ IDEA XXX.app/Contents/Info.plist` `JVMVersion` from `1.6*` to `1.7*`
I don't use this anymore as it breaks the application's signature.

Instead, download a JDK bundled one. See <http://stackoverflow.com/a/26484162>

Add following lines to `/Users/ali/Desktop/devl-tools/IntelliJ IDEA 13.app/bin/idea.properties`:

* `idea.config.path=/Users/ali/Desktop/devl-tool-data/IntellijIdea13/config`
* `idea.system.path=/Users/ali/Desktop/devl-tool-data/IntellijIdea13/system`
* `idea.plugins.path=/Users/ali/Desktop/devl-tool-data/IntellijIdea13/plugins`
* `idea.log.path=/Users/ali/Desktop/devl-tool-data/IntellijIdea13/log`

### SAP GUI
Go to SAP GUI Options from Windows menu.
Set font size to 12 or larger.

### Xcode
Install Xcode from AppStore, otherwise IOS 6 simulator doesn't work.

### Keyboard:
* If you haven't created your custom keyboard yet, install `ukalele`, create a custom keyboard layout.
* Or get it from [here]({{ '/post-assets/MyBritish.keylayout' | prepend: site.baseurl }})
* Copy it into `/Library/Keyboard Layouts/`
* Add the custom layout from OsX Preferences->Keyboard.
* Then edit the file
* Remove other keyboards
* Set custom layout as the default one.
* Then do <http://apple.stackexchange.com/questions/44913/make-a-custom-keyboard-layout-the-system-default-even-for-the-login-screen>


----------------------------------------------------------------------------------------------------------------------------------------

Install other tools
----------------------------------------------------------------------------------------------------------------------------------------

### Firefox - safe way
Download Firefox. Don't DnD into applications. DnD into `~/Desktop/apps/noindex` twice with names  `Firefox-Auth.app` and `Firefox-Ninja.app`. 

If you've already run any of these, then close it. Open profile manager : `~/Desktop/apps/noindex/Firefox-Auth.app/Contents/MacOS/firefox-bin -p`.
Delete all profiles.
 
Create 2 profiles : `Auth` and `Ninja` with folders `Users/ali/Desktop/app-data/firefox-auth-profile` and `Users/ali/Desktop/app-data/firefox-ninja-profile`.

Open AppleScript Script Editor and paste this:

`do shell script "/Users/ali/Desktop/apps/noindex/Firefox-Auth.app/Contents/MacOS/firefox-bin -P \"Auth\" -no-remote  > /dev/null 2>&1 &"`

Save the script into `/Users/ali/Desktop/apps/` with the file format *Application* and name `firefox-auth.app`.

Do the similar for creating another profile, namely "Ninja":

`do shell script "/Users/ali/Desktop/apps/noindex/Firefox-Ninja.app/Contents/MacOS/firefox-bin -P \"Ninja\" -no-remote  > /dev/null 2>&1 &"`

Save the script into `/Users/ali/Desktop/apps/` with the file format *Application* and name `firefox-ninja.app`.

Change icons of both scripts. Change icon of "Firefox-Ninja.app" as well. Otherwise, they will look the same.

Add `/Users/ali/Desktop/apps/noindex` to Spotlight's exclude list.

Open both Firefox instances and disable cookies.

### <s>Chrome</s> (I don't use it anymore)
Download Chrome. Don't DnD into applications. DnD into `~/Desktop/apps/noindex` twice with names  `Google Chrome Auth.app` and `Google Chrome Ninja.app`.

If you've already run any of these, then close it. Delete the following folder: `/Users/ali/Library/Application Support/Google/Chrome`

Open AppleScript Script Editor and paste this:

`do shell script "/Users/ali/Desktop/apps/noindex/Google\\ Chrome\\ Auth.app/Contents/MacOS/Google\\ Chrome --user-data-dir=/Users/ali/Desktop/app-data/chrome-auth-profile > /dev/null 2>&1 &"`

Save the script into `/Users/ali/Desktop/apps/` with the file format *Application* and name `chrome-auth-user.app`.

Do the similar for creating another profile, namely "ninja".

`do shell script "/Users/ali/Desktop/apps/Google\\ Chrome\\ Ninja.app/Contents/MacOS/Google\\ Chrome --user-data-dir=/Users/ali/Desktop/app-data/chrome-ninja-profile > /dev/null 2>&1 &"`

Save the script into `/Users/ali/Desktop/apps/` with the file format *Application* and name `chrome-ninja-user.app`.

Change icons of both scripts. Change icon of "Google Chrome Ninja.app" as well. Otherwise, they will look the same.

Add `/Users/ali/Desktop/apps/noindex` to Spotlight's exclude list.

Open both Chrome instances and disable cookies. Install *Whitelist* Chrome extension to `chrome-auth`.

### Parallels
Starting the app from Finder or Spotlight might not work.
try `open /Applications/Parall.... .app`

Remove stuff:
{% highlight bash %}
rm -rf /Users/$USER/Library/Parallels/
rm -rf /Users/$USER/Library/Logs/parallels*
rm -rf /Users/$USER/Library/Saved\ Application\ State/com.parallels.desktop.console.savedState/
rm -rf /Users/$USER/Library/Preferences/com.parallels.*
rm -rf /Users/$USER/Library/Preferences/Parallels/
rm -rf /Applications\ \(Parallels\)/
rm -rf /Applications/Parallels*
sudo rm -rf /Library/Logs/parallels*
sudo rm -rf /Library/Preferences/Parallels/
sudo rm -rf /Users/Shared/Parallels/
{% endhighlight %}



----------------------------------------------------------------------------------------------------------------------------------------

Some customization files
----------------------------------------------------------------------------------------------------------------------------------------

### Final `/etc/launchd.conf`
{% highlight bash %}
# Set environment variables here so they are available globally to all apps                                                                                                                                                                   
# (and Terminal), including those launched via Spotlight.
#
# After editing this file run the following command from the terminal to update 
# environment variables globally without needing to reboot.
# NOTE: You will still need to restart the relevant application (including 
# Terminal) to pick up the changes!
# grep -E "^setenv" /etc/launchd.conf | xargs -t -L 1 launchctl
#
# See http://www.digitaledgesw.com/node/31
# and http://stackoverflow.com/questions/135688/setting-environment-variables-in-os-x/
#
# Note that you must hardcode the paths below, don't use enviroment variables.
# You also need to surround multiple values in quotes, see MAVEN_OPTS example below.
#
#umask 077        # don't do it
setenv JAVA_VERSION 1.7
setenv JAVA_HOME /Library/Java/JavaVirtualMachines/jdk1.7.0_67.jdk/Contents/Home

setenv PATH "/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/ali/Desktop/devl-tools/apache-maven-3.2.3/bin"

setenv MAVEN_OPTS "-Xmx1024M -XX:MaxPermSize=512m"
setenv M2_HOME /Users/ali/Desktop/devl-tools/apache-maven-3.2.3
setenv GRADLE_HOME /Users/ali/Desktop/devl-tools/gradle-2.1/bin
{% endhighlight %}

### Final `/etc/profile`
{% highlight bash %}
# System-wide .profile for sh(1)

if [ -x /usr/libexec/path_helper ]; then
    eval `/usr/libexec/path_helper -s`
fi

if [ "${BASH-no}" != "no" ]; then
    [ -r /etc/bashrc ] && . /etc/bashrc
fi

export PATH=$PATH:/Users/ali/Desktop/devl-tools/apache-maven-3.2.3/bin/
export PATH=$PATH:/Users/ali/Desktop/devl-tools/mysql/bin  
{% endhighlight %}


### Final `~./bash_profile`
{% highlight bash %}
# color settings                                                                                                                                                                                                                              
export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# some alias
alias ls='ls -GFh --color'

# enable bash completion
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi

# set editor settings
export EDITOR=vim
# Vim in less behavior
export VIM_LESS=`find /usr/share/vim -name 'vim[0-9][0-9]'`/macros/less.sh

# arrange default path
export PATH=/usr/local/bin:$PATH

# make homebrew installed tools have precedence
# homebrew installed gnu code utils have precedence over OsX provided same tools
# see http://osxtutorialsunix.blogspot.ch/2013/11/updating-coreutils-homebrew-mavericks.html
export PATH=/usr/local/opt/coreutils/libexec/gnubin:$PATH
export MANPATH=/usr/local/opt/coreutils/libexec/gnuman:$MANPATH

# define command `cdf`. This does `cd` into open finder folder in terminal
cdf() {
    target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
    if [ "$target" != "" ]; then
        cd "$target"; pwd
    else
        echo 'No Finder window found' >&2
    fi
}
{% endhighlight %}

### Final `~/.vimrc`:
Enable some special stuff in Vim
{% highlight vim %}
" Set tabs to 4 spaces                                                                                                                                                                                                                        
set tabstop=4
set shiftwidth=4
set expandtab

" Enable mouse (scrolling and curser setting)
set mouse=nicr

" Set colorscheme
colorscheme desert
" Enable syntax highlighting
syntax on
" Enable line numbers
"set number -- CANCELLED
" Highlight current line
set cursorline
" Highlight searches
set hlsearch
" Ignore case of searches
set ignorecase
" Highlight dynamically as pattern is typed
set incsearch
" Always show status line
set laststatus=2
" Show the cursor position
set ruler
" Show the current mode
set showmode
" Show the filename in the window titlebar
set title
" Show the (partial) command as it’s being typed
set showcmd
" Start scrolling three lines before the horizontal window border
set scrolloff=3

" Centralize backups, swapfiles and undo history
set backupdir=~/.vim/backups
set directory=~/.vim/swaps
if exists("&undodir")
set undodir=~/.vim/undo
endif
{% endhighlight %}

### Final `/etc/my.cnf`
{% highlight ini %}
# The following options will be passed to all MySQL clients                                                                                                                                                                                   
[client]
#password   = your_password
port        = 3306


# MySQL command line client
[mysql]
default-character-set=latin1
no-auto-rehash


# The MySQL server
[mysqld]
user            = ali
port        = 3306
#basedir         = /usr/local/mysql
basedir         = /Users/ali/Desktop/devl-tools/mysql
datadir         = /Users/ali/Desktop/devl-tool-data/mysql-data
default-storage-engine=INNODB

# default charset of a database or a table, if not specified
character-set-server=latin1

# Set the SQL mode to strict
sql-mode="STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION"

# Maximum size for internal (in-memory) temporary tables. If a table
# grows larger than this value, it is automatically converted to disk
# based table This limitation is for a single table. There can be many
# of them.
tmp_table_size=100M

#innodb_data_home_dir = /Users/ali/Desktop/devl-tool-data/mysql-data
innodb_data_file_path = ibdata1:10M:autoextend
#innodb_log_group_home_dir = /Users/ali/Desktop/devl-tool-data/mysql-data


[mysqldump]
quick
max_allowed_packet = 16M

[myisamchk]
key_buffer_size = 8M
sort_buffer_size = 8M

[mysqlhotcopy]
interactive-timeout
{% endhighlight %}
