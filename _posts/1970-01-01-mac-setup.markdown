---
layout: post
title:  "Mac Setup"
date:   2014-10-03 20:59:15
categories: private
---

This is how I set up my Mac. I took notes since I was a Mac newbie.


---------------------------------------------------------------------------------------

Security
---------------------------------------------------------------------------------------

### Set up firmware password

* Hold alt key while booting
* Select recovery
* Go to Utilities > Firmware password

### Change root password

    sudo passwd

### Remove access to home folder for other users and groups (SKIPPED)

**I skipped this since I will use FileVault now and there is only 1 user in the system.**

    chmod -R g-r /Users/ali
    chmod -R g-w /Users/ali
    chmod -R g-x /Users/ali
    chmod -R o-r /Users/ali
    chmod -R o-w /Users/ali
    chmod -R o-x /Users/ali

### `umask` settings
**This is reverted afterwards since it was causing system problems.**

Change umask so that new created folders and files are not accessible by group or others. By default, Mac makes new files readable
by everyone, even if the parent folder of the file/folder is not like that.
Add line `umask 077` to file `/etc/launchd.conf`.

### FileVault

Enabled FileVault.

Restarted machine.

---------------------------------------------------------------------------------------

Finder and UI
---------------------------------------------------------------------------------------

### Show hidden files in Finder
Execute command (case sensitive)

`defaults write com.apple.finder AppleShowAllFiles -boolean true`

Then to refresh Finder, execute

`killall Finder`

### Show full path in Finder

`defaults write com.apple.finder _FXShowPosixPathInTitle -bool YES`

`killall Finder`

### Get rid of Dashboard (SKIPPED)

Dashboard is deactivated by default with OSX Yosemite.

`defaults write com.apple.dashboard mcx-disabled -boolean true`

`kilall Dock`


---------------------------------------------------------------------------------------

Package management
---------------------------------------------------------------------------------------

Install Homebrew package manager.

Install Cask.


Homebrew stuff installed:

{% highlight bash %}
brew install wget git ruby

# following has some post ops
brew install coreutils findutils gnu-tar gnu-sed gawk gnutls gnu-indent gnu-getopt
# add following lines to ~/.bash_profile
# export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
# export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
# export PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"
# export MANPATH="/usr/local/opt/findutils/libexec/gnuman:$MANPATH"
# export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"
# export MANPATH="/usr/local/opt/gnu-tar/libexec/gnuman:$MANPATH"
# export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
# export MANPATH="/usr/local/opt/gnu-sed/libexec/gnuman:$MANPATH"

brew tap homebrew/dupes; brew install grep
{% endhighlight %}

{% highlight bash %}
brew install bash-completion
{% endhighlight %}

This one needs some post installation work:
{% highlight bash %}
#  Add following to ~/.bash_profile
if [ -f $(brew --prefix)/etc/bash_completion ]; then
    . $(brew --prefix)/etc/bash_completion
fi
{% endhighlight %}

---------------------------------------------------------------------------------------

Setting environment variables
---------------------------------------------------------------------------------------

Apple did a shitty job about environment variables.
This is the right approach it seems:
http://stackoverflow.com/questions/25385934/setting-environment-variables-via-launchd-conf-no-longer-works-in-os-x-yosemite?lq=1

For other versions, there are other instructions.

TBA more

---------------------------------------------------------------------------------------

Keyboard
---------------------------------------------------------------------------------------

### Super fast
Make it super fast by following:
http://apple.stackexchange.com/questions/10467/how-to-increase-keyboard-key-repeat-rate-on-os-x

    defaults write -g InitialKeyRepeat -int 10
    defaults write -g KeyRepeat -int 0


### Accent menu
Get rid of accent menu (shown when a key is held) . See <http://osxdaily.com/2011/08/04/enable-key-repeat-mac-os-x-lion/> .
Run following and restart the apps.

    defaults write -g ApplePressAndHoldEnabled -bool false


### Custom layout:
* Get the file: `MyBritish3.keylayout`
* Copy it into `/Library/Keyboard Layouts/`
* Add the custom layout from OsX Preferences->Keyboard.
* Remove other keyboards
* Set custom layout as the default one.
* In El Capitan, it was also the default language in login screen


---------------------------------------------------------------------------------------

Install JDK
---------------------------------------------------------------------------------------

    brew cask install java

This installs JDK 8.

It is installed into `/Library/Java/JavaVirtualMachines/jdk1.8.0_92.jdk/Contents/Home`.

Restart your machine. All of the following should point to new JDK:

* `which java`
* `java -version`
* `/usr/libexec/java_home`

TBD: Env var: use this link : `/Library/Java/Home`


---------------------------------------------------------------------------------------

Install developer tools
---------------------------------------------------------------------------------------

### Intellij IDEA

Check <https://www.jetbrains.com/help/idea/2016.1/tuning-intellij-idea.html>.


### Xcode
Install Xcode from AppStore, otherwise IOS simulator doesn't work.


### Git config

    git config --global user.name "John Doe"
    git config --global user.email johndoe@example.com
    git config --global core.autocrlf input

---------------------------------------------------------------------------------------

Some customization files
---------------------------------------------------------------------------------------

### Final `~./bash_profile`

{% highlight bash %}
# color settings
# http://stackoverflow.com/questions/1550288/os-x-terminal-colors
export PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# some alias
# http://stackoverflow.com/questions/1550288/os-x-terminal-colors
alias ls='ls -GFh --color'

# enable bash completion
if [ -f $(brew --prefix)/etc/bash_completion ]; then
  . $(brew --prefix)/etc/bash_completion
fi

# set editor settings
export EDITOR=vim

# arrange default path
export PATH=/usr/local/bin:$PATH

# make homebrew installed tools have precedence
export PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH"
export PATH="/usr/local/opt/findutils/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/findutils/libexec/gnuman:$MANPATH"
export PATH="/usr/local/opt/gnu-tar/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/gnu-tar/libexec/gnuman:$MANPATH"
export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
export MANPATH="/usr/local/opt/gnu-sed/libexec/gnuman:$MANPATH"

# define command `cdf`. This does `cd` into open finder folder in terminal
cdf() {
    target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
    if [ "$target" != "" ]; then
        cd "$target"; pwd
    else
        echo 'No Finder window found' >&2
    fi
}
{% endhighlight %}

### Final `~/.vimrc`:

Enable some special stuff in Vim

{% highlight vim %}
" Set tabs to 4 spaces                                                                                                                                                                                                                        
set tabstop=4
set shiftwidth=4
set expandtab

" Enable mouse (scrolling and curser setting)
" http://superuser.com/questions/146768/mouse-cursor-in-terminal
set mouse=a

" Set colorscheme
colorscheme desert
" Enable syntax highlighting
syntax on
" Enable line numbers
"set number -- CANCELLED
" Highlight current line
set cursorline
" Highlight searches
set hlsearch
" Ignore case of searches
set ignorecase
" Highlight dynamically as pattern is typed
set incsearch
" Always show status line
set laststatus=2
" Show the cursor position
set ruler
" Show the current mode
set showmode
" Show the filename in the window titlebar
set title
" Show the (partial) command as itâ€™s being typed
set showcmd
" Start scrolling three lines before the horizontal window border
set scrolloff=3

" Centralize backups, swapfiles and undo history
set backupdir=~/.vim/backups
set directory=~/.vim/swaps
if exists("&undodir")
set undodir=~/.vim/undo
endif
{% endhighlight %}

Make sure you run following afterwards:

    mkdir ~/.vim
    mkdir ~/.vim/backups
    mkdir ~/.vim/swaps
    mkdir ~/.vim/undo
